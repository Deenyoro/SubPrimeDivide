# ============================================================================
# Stage 1: Get pre-built CADO-NFS from official container
# ============================================================================
FROM registry.gitlab.inria.fr/cado-nfs/cado-nfs/factoring-full:latest AS cado-source

# CADO-NFS official container has pre-built binaries - we just copy them
# This eliminates compilation issues and is much faster

# ============================================================================
# Stage 2: Final runtime image
# ============================================================================
FROM python:3.11-slim

# Build arguments for CI/CD
ARG GIT_COMMIT=unknown
ARG BUILD_DATE=unknown
ARG CELERY_CONCURRENCY=4

# Labels for image metadata
LABEL org.opencontainers.image.source="https://github.com/your-org/semiprime"
LABEL org.opencontainers.image.description="SemiPrime Factor Celery Worker"
LABEL org.opencontainers.image.version="${GIT_COMMIT}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"

# Install runtime dependencies (no build tools needed)
RUN apt-get update && apt-get install -y \
    libgmp-dev \
    libmpfr-dev \
    libmpc-dev \
    libprimesieve-dev \
    primesieve \
    pkg-config \
    gmp-ecm \
    libhwloc-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy pre-built CADO-NFS from official container
# CADO-NFS installs to /usr/local by default (make install PREFIX=/usr/local)
# Driver script is in /usr/local/bin, data/libs in /usr/local/share/cado-nfs-*
COPY --from=cado-source /usr/local/bin/cado-nfs.py /usr/local/bin/cado-nfs.py
COPY --from=cado-source /usr/local/share/ /usr/local/share/

# Ensure Python can find CADO-NFS bundled libraries
ENV PYTHONPATH="/usr/local/share/cado-nfs-3.0.0/scripts:${PYTHONPATH}"

WORKDIR /app

# Copy requirements
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create uploads directory
RUN mkdir -p /app/uploads

# Store build info
RUN echo "GIT_COMMIT=${GIT_COMMIT}" > /app/build-info.txt && \
    echo "BUILD_DATE=${BUILD_DATE}" >> /app/build-info.txt

# Set environment variable for concurrency
ENV CELERY_CONCURRENCY=${CELERY_CONCURRENCY}

CMD ["celery", "-A", "app.worker", "worker", "--loglevel=info", "--concurrency=${CELERY_CONCURRENCY}"]
